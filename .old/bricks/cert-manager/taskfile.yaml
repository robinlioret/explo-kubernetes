version: "3"

vars:
  CERT_MANAGER_CHART_VERSION: 1.16.2

tasks:
  standalone:
    cmds:
      - task: check-certificates
      - task: :kind:recreate
        vars:
          KIND_CLUSTER_CONFIG: c1w0
      - task: deploy
      - task: test

  deploy:
    cmds: # See https://cert-manager.io/docs/installation/helm/
      - task: :helpers:check-kubectl
      - task: :helpers:check-helm
      - task: check-certificates

      - helm repo add jetstack https://charts.jetstack.io --force-update
      - helm install cert-manager jetstack/cert-manager --namespace kube-security --version v{{ .CERT_MANAGER_CHART_VERSION }} --set crds.enabled=true --wait
      - >-
        kubectl create secret tls --namespace kube-security ca-sandbox-local 
        --key ../../certificates/sandbox.local.key
        --cert ../../certificates/sandbox.local.crt
      - kubectl apply --server-side --namespace kube-security -f manifests/cluster-issuer.yaml

  test:
    cmds:
      - task: :helpers:check-kubectl
      - task: :helpers:check-helm

      - kubectl apply --server-side -f tests/sample-certificate.yaml
      - kubectl wait --namespace default --for condition=Ready certificate example-com --timeout=60s
      - kubectl delete -f tests/sample-certificate.yaml

  check-certificates:
    internal: true
    silent: true
    cmds:
      - |
        if ! test -f ../../certificates/sandbox.local.crt; then
          echo "Run task create-self-signed-ca-certificate first !"
          exit 1
        fi
