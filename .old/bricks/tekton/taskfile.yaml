version: "3"

tasks:
  standalone:
    cmds:
      - task: :kind:recreate
        vars:
          KIND_CLUSTER_CONFIG: c1w3-exposed
      - task: :cert-manager:deploy
      - task: :nginx-ingress-controller:deploy
      - task: deploy

  deploy:
    cmds:
      - task: :helpers:check-kubectl

      # Task and Pipeline
      # https://tekton.dev/docs/installation/pipelines/
      - kubectl apply --server-side --filename https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml
      - kubectl wait --namespace=tekton-pipelines --for condition=ready pod --selector=app.kubernetes.io/part-of=tekton-pipelines --timeout=90s

      # Triggers
      # https://tekton.dev/docs/installation/triggers/
      - kubectl apply --server-side --filename https://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml
      - kubectl apply --server-side --filename https://storage.googleapis.com/tekton-releases/triggers/latest/interceptors.yaml
      - kubectl wait --namespace=tekton-pipelines --for condition=ready pod --selector=app.kubernetes.io/part-of=tekton-triggers --timeout=90s

      # Dashboard
      # https://tekton.dev/docs/dashboard/install/
      - kubectl apply --server-side --filename https://storage.googleapis.com/tekton-releases/dashboard/latest/release.yaml
      - kubectl apply --server-side --filename ./manifests/ingress.yaml
      - task: :helpers:hosts-file
        vars:
          HOSTNAME: "tekton.sandbox.local"

      - kubectl wait --namespace=tekton-pipelines --for condition=ready pod --selector=app.kubernetes.io/part-of=tekton-dashboard --timeout=90s

  test:
    cmds:
      - task: :helpers:check-kubectl

      - kubectl apply --server-side --filename ./manifests/sample/task-1.yaml
      - kubectl apply --server-side --filename ./manifests/sample/task-2.yaml

      - kubectl apply --server-side --filename ./manifests/sample/task-1-run.yaml
      - kubectl apply --server-side --filename ./manifests/sample/task-2-run.yaml

      - kubectl apply --server-side --filename ./manifests/sample/pipeline.yaml
      - kubectl apply --server-side --filename ./manifests/sample/pipeline-run.yaml